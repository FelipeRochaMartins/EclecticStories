@model Presentation.Models.BookViewModelList
@inject IBookCoverService _bookCoverService

@{
    ViewData["Title"] = "Index";
}

<h1>Library</h1>

<p>
    <a class="btn btn-primary" asp-action="New">New Book</a>
</p>

<form asp-action="Index" method="get" class="mb-4">
    <div class="input-group">
        <input type="text" name="searchTerm" class="form-control" placeholder="Search books..." value="@ViewData["CurrentFilter"]" />
        <button type="submit" class="btn btn-outline-secondary">Search</button>
    </div>
</form>

<div class="row">
    @if (Model.Books != null && Model.Books.Any())
    {
        @foreach (var item in Model.Books)
        {
            string coverPath = await _bookCoverService.GetBookCoverAsync(item.BookId);

            var imgSrc = string.IsNullOrEmpty(coverPath)
            ? Url.Content("~/images/placeholder.jpg")
            : Url.Content("~/images/" + coverPath);

            <div class="col-sm-6 col-md-3 col-lg-2 mb-4">
                <div class="card h-100">

                    <a asp-action="Book" asp-route-id="@item.BookId">
                        <img src="@imgSrc"
                             data-book-id="@item.BookId"
                             class="card-img-top"
                             alt="Cover for @item.Name"
                             style="max-width: 100%; height: auto; aspect-ratio: 3.5 / 5; object-fit: cover;" />
                    </a>

                    <a asp-action="Book" asp-route-id="@item.BookId" class="text-decoration-none text-black">
                    <div class="card-body text-center">
                        <h5 class="card-title">
                            @Html.DisplayFor(modelItem => item.Name)
                        </h5>
                    </div>
                    </a>

                </div>
            </div>
        }
    }
</div>

<div class="d-flex justify-content-between mt-4">
    <ul class="pagination">
        @if (Model.PageNumber > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@(Model.PageSize)">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@(Model.PageSize)">@i</a>
            </li>
        }

        @if (Model.PageNumber < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@(Model.PageSize)">Next</a>
            </li>
        }
    </ul>
</div>
