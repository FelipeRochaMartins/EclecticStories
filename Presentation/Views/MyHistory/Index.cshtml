@model IEnumerable<Presentation.Models.HistoryViewModel>
@inject IBookCoverService _bookCoverService
@inject IBookService _bookService
@inject IPageService _pageService

@{
    ViewData["Title"] = "Reading History";
}

<div class="container mt-5">
    <h1 class="mb-4 mx-3" style="color: #004aad;">Your Reading History</h1>
    <hr class="mb-5" style="color: #004aad;">

    <div class="row">
        <div class="col-12 col-md-8 col-lg-6 mx-auto">
            @foreach (var book in Model)
            {
                string bookName = await _bookService.GetBookNameByIdAsync(book.BookId);
                string coverPath = await _bookCoverService.GetBookCoverAsync(book.BookId);
                int totalPages = await _pageService.GetTotalPagesAsync(book.BookId);

                var imgSrc = string.IsNullOrEmpty(coverPath)
                ? Url.Content("~/images/placeholder.png")
                : Url.Content("~/images/" + coverPath);

                <a href="@Url.Action("Book", "Library", new { id = book.BookId })" class="text-decoration-none">
                    <div class="card mb-3 border-blue-less d-flex flex-row align-items-center favorite-linear">
                        <div style="width: 60px; height: 90px; overflow: hidden; background-color: lightgray;">
                            <img src="@imgSrc" alt="Book Cover" class="img-fluid" style="object-fit: cover; width: 100%; height: 100%;" />
                        </div>
                        <div class="card-body d-flex flex-column justify-content-center">
                            <h5 class="card-title mb-1" style="color: #004aad;">@_pageService.LimitString(bookName, 25)</h5>
                            <p class="card-text mb-0" style="color: #004aad77;">@((book.LastPageRead ?? 0) + " of " + totalPages)</p>
                        </div>
                    </div>
                </a>
            }
        </div>
    </div>

    <hr class="mb-5" style="color: #fcfcfc;">
</div>
