@model IEnumerable<Presentation.Models.CommentaryViewModel>
@inject UserManager<IdentityUser> _userManager
@inject IPageService _pageService

@{
    ViewData["Title"] = "Commentaries";

    string? userId = _userManager.GetUserId(User);
    var user = await _userManager.GetUserAsync(User);
    bool IsAllowedComment = user != null && await _userManager.IsEmailConfirmedAsync(user);
}

<div class="container mt-5 col-12 col-md-8 col-lg-6">
    <h1 class="mb-4" style="color: #004aad;">Commentaries</h1>

    @if (IsAllowedComment)
    {
        @Html.ActionLink("Post a Comment", "New", "Commentary", new { bookId = ViewBag.BookId }, new { @class = "btn btn-pri-blue mb-4" })
    }

    @Html.ActionLink("Return", "Book", "Library", new { id = ViewBag.BookId }, new { @class = "btn btn-sec-black mb-4 mx-2" })

    @if (Model == null || !Model.Any())
    {
        <h2>No comments for this book</h2>
    }
    else
    {
        @foreach (var item in Model)
        {
            <div class="card mb-3 border-blue">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="comment-username" style="color: #004aad;">@item.Username</h3>
                        <h4 class="comment-time text-muted mb-0">@_pageService.TimeAgo(item.CreatedDate)</h4>
                    </div>

                    <hr class="my-1" style="color: #004aad99;">

                    <p class="comment-text preserve-format">@item.Comment</p>

                    @if (userId == item.PublisherId || User.IsInRole("Admin"))
                    {
                        <div class="mt-2">
                            @Html.ActionLink("Delete Comment", "Delete", "Commentary", new { id = item.CommentId, bId = ViewBag.BookId }, new { @class = "btn btn-danger btn-sm" })
                        </div>
                    }
                </div>
            </div>
        }

        <hr class="mb-5" style="color: #fcfcfc;">
    }
</div>
